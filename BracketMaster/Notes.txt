General notes.



Texas Match Card System

Be able to create a set of matches given a list of brackets. The matches need to be spread over the brackets
such that a competitor has at least 1 match rest. Different size brackets may have different ways of allocatating the
mathces. A round robin is different than a double-elimination bracket.

Double Elimination
    Go through all the winners first. By the time the 1st place is decided, all other initial positions on
    the loser bracket side will be known.

Should the program take into account the necessity of giving a rest or should that be done manually?
    When creating a match, could insure that neither player was in the previous match.
    Need to figure out what to do in that situation.



Bracket of 8 - Winners side.
----------
                ------
----------

                           -----------
----------
                ------
----------
                                              ------

----------
                ------
----------
                             -----------
----------
                ------
----------


Document

TournamentDoc
- The tournament object
- List of all clubs
- List of all competitors
- List of all brackets
- List of all matches
    - Matches can be a hash with bracket id as a key

Editor and commands

A command does the work.
The editor keeps track of the commands for undo/redo.
What executes the command?
    The editor?
    A command controller?
    Directly?

What if editor is the interface to the doc.
A command would call methods on the editor to update data
Command would need to do the opposite for a undo and retain state.
In this mode, where would the command stack be stored?
    Pass the command to the editor and have it call the execute?
    Editor could then be passed to the command to do the work.

Create an IEditor interface?
    It has the method declarations?
    It can be exported.


Editor.execute() would take a pointer to a command.
